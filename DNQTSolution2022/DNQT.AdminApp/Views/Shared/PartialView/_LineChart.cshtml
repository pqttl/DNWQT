@model String[]
@{
    var strName = DNQT.ToolCommon.QTConstants.PartialView._LineChart.STR;
    if (strName == "")
    {
    }
    
    string strType = Model[0];
    string strKeyAndFunction = Model[1];

    string idAShow = nameof(idAShow)+"_"+strKeyAndFunction;
    string idCanvasChartLine = nameof(idCanvasChartLine)+"_"+strKeyAndFunction;
    string idInputStartDate = nameof(idInputStartDate)+"_"+strKeyAndFunction;
    string idInputEndDate = nameof(idInputEndDate)+"_"+strKeyAndFunction;
    
    string idDivThaoTac = nameof(idDivThaoTac)+"_"+strKeyAndFunction;
    
    string idDivChartAndNote = nameof(idDivChartAndNote)+"_"+strKeyAndFunction;

    string strTemp = "";
}

@if (strType == "js")
{

    <script type="text/javascript">

        function @(strKeyAndFunction)(resultJson) {

            if (resultJson.blnStatusJs == false) {
                alert(resultJson.strMess);
                return;
            }

            let arrayName = JSON.parse(resultJson.strArrayNameJs);
            let arrayQuantity = JSON.parse(resultJson.strArrayQuantityJs);
            let arrayQuantitySang = JSON.parse(resultJson.strArrayQuantitySangJs);
            let arrayQuantityChieu = JSON.parse(resultJson.strArrayQuantityChieuJs);

            const config = {
                type: 'line',
                data: {
                    labels: arrayName,
                    datasets: [{
                        label: 'A1',
                        fill: false,
                        data: arrayQuantity,
                        borderWidth: 1,
                        borderColor: 'rgba(13,110,253,255)',
                        backgroundColor: 'rgba(13,110,253,255)'
                    }, {
                        label: 'B2',
                        fill: false,
                        borderDash: [5, 5],
                        hidden: true,
                        data: arrayQuantityChieu,
                        borderWidth: 1,
                        borderColor: 'rgba(4,3,70,255)',
                        backgroundColor: 'rgba(4,3,70,255)'
                    }, {
                        label: 'C3',
                        fill: true,
                        hidden: true,
                        data: arrayQuantitySang,
                        borderWidth: 1,
                        borderColor: 'rgba(246,228,173,255)',
                        backgroundColor: 'rgba(246,228,173,255)'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: false,
                            text: 'Tên biểu đồ'
                        }
                    }
                }
            };

            let chartStatus = Chart.getChart("@idCanvasChartLine"); // <canvas> id
            if (chartStatus != undefined) {
                chartStatus.destroy();
                //chartStatus.options = config;
                //chartStatus.update('active');
            }

            let myLineChart = new Chart(document.getElementById('@idCanvasChartLine'), config);

        }

    </script>
    
    strTemp = Url.Action(strKeyAndFunction);
    
    <script type="text/javascript">

        document.getElementById("@idAShow").addEventListener("click", function (e) {
            e.preventDefault();
            setCollapseForId($("#@idDivChartAndNote"), false);
            setDisableAllForIdAndChild($("#@idDivThaoTac"), true);
            setCollapseForId($("#@idAShow"), true);

            voidShowLoadingWithTitlePercent("HIỂN THỊ THỐNG KÊ","40%");

            var arrayStrInput = [];
            arrayStrInput.push(document.getElementById("@idInputStartDate").value);
            arrayStrInput.push(document.getElementById("@idInputEndDate").value);
            
            voidCallAjaxGetByUrlArrayInput('@strTemp',arrayStrInput);

        });

    </script>

}

@if (strType == "html")
{
    string strGhiChu = Model[2];
    string strNameChart = Model[3];

    @*@await Html.PartialAsync(DNQT.ToolCommon.QTConstants.PartialView._HeaderGroupBox.PATH
        , new string[] {"" })*@

    <div id="@idDivChartAndNote" class="collapse">

        @*<div class="d-flex justify-content-center">
            <h6 class="text-center">@Html.Raw(strNameChart)</h6>
            </div>*@

        <div class="mt-3 d-flex justify-content-start px-2">
            <pre class="my-auto" style="white-space: pre-wrap;">@strGhiChu</pre>
        </div>

        <div class="card-body p-0" style="
    margin-left: 0px;
    margin-right: -5px;
">
            <div style="min-height: 300px;">
                <canvas id="@idCanvasChartLine"></canvas>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center">
        <h6 class="text-center">@Html.Raw(strNameChart)</h6>
    </div>
    


    <div class="card my-3 mx-1 position-relative" id="@idDivThaoTac" style="max-width: 450px;">
        @await Html.PartialAsync(DNQT.ToolCommon.QTConstants.PartialView._HeaderGroupBox.PATH
    , new string[] {"Mốc thời gian cụ thể" })

        <div class="card-body mt-3 py-1 container">

            @await Html.PartialAsync(DNQT.ToolCommon.QTConstants.PartialView._DateRangePicker.PATH
        , new string[] {"html",strKeyAndFunction })

        </div>

        <div class="my-2 d-flex justify-content-center px-2">
            <a href="#" class="link-info" id="@idAShow">Hiển thị</a>
        </div>

    </div>

}
