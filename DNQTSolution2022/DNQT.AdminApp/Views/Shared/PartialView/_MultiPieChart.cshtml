@model String[]
@{
    var strName = DNQT.ToolCommon.QTConstants.PartialView._MultiPieChart.STR;
    if (strName == "")
    {
    }
    
    string strType = Model[0];
    string strKeyAndFunction = Model[1];

    string idAShow = nameof(idAShow)+"_"+strKeyAndFunction;
    string idCanvasChartLine = nameof(idCanvasChartLine)+"_"+strKeyAndFunction;
    string idInputStartDate = nameof(idInputStartDate)+"_"+strKeyAndFunction;
    string idInputEndDate = nameof(idInputEndDate)+"_"+strKeyAndFunction;
    
    string idDivThaoTac = nameof(idDivThaoTac)+"_"+strKeyAndFunction;
    string idDivNoteColor = nameof(idDivNoteColor)+"_"+strKeyAndFunction;
    
    string idDivChartAndNote = nameof(idDivChartAndNote)+"_"+strKeyAndFunction;

    string strTemp = "";
}

@if (strType == "js")
{

    <script type="text/javascript">

        function @(strKeyAndFunction)(resultJson) {

            if (resultJson.blnStatusJs == false) {
                alert(resultJson.strMess);
                return;
            }

            let arrayName = JSON.parse(resultJson.strArrayNameJs);
            let arrayQuantity = JSON.parse(resultJson.strArrayQuantityJs);
            let arrayColor = JSON.parse(resultJson.strArrayColorJs);
            
            let arrayNameCenter = JSON.parse(resultJson.strArrayNameCenterJs);
            let arrayColorCenter = JSON.parse(resultJson.strArrayColorCenterJs);
            let arrayQuantityCenter = JSON.parse(resultJson.strArrayQuantityCenterJs);

            let arrayNameAll = arrayName.concat(arrayName);
            
            const config = {
                type: 'pie',
                data: {
                    //labels: arrayName,
                    datasets: [{
                        labels: arrayName,
                        data: arrayQuantity,
                        backgroundColor: arrayColor
                    },{
                        labels: arrayNameCenter,
                        data: arrayQuantityCenter,
                        backgroundColor: arrayColorCenter
                    }]
                },
                options: {
                    responsive: true,
                    plugins:{
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    const labelIndex = context.dataIndex;
                                    return context.chart.data.datasets[context.datasetIndex].labels[labelIndex]+ ': ' + context.formattedValue;
                                }
                            }
                        }
                    }
                }
            };

            let chartStatus = Chart.getChart("@idCanvasChartLine"); // <canvas> id
            if (chartStatus != undefined) {
                chartStatus.destroy();
                //chartStatus.options = config;
                //chartStatus.update('active');
            }

            let myLineChart = new Chart(document.getElementById('@idCanvasChartLine'), config);

            document.getElementById('@idDivNoteColor').outerHTML=resultJson.strNoteColor;

        }

    </script>
    
    strTemp = Url.Action(strKeyAndFunction);
    
    <script type="text/javascript">

        document.getElementById("@idAShow").addEventListener("click", function (e) {
            e.preventDefault();
            setCollapseForId($("#@idDivChartAndNote"), false);
            setDisableAllForIdAndChild($("#@idDivThaoTac"), true);
            setCollapseForId($("#@idAShow"), true);

            voidShowLoadingWithTitlePercent("HIỂN THỊ THỐNG KÊ","40%");

            var arrayStrInput = [];
            arrayStrInput.push(document.getElementById("@idInputStartDate").value);
            arrayStrInput.push(document.getElementById("@idInputEndDate").value);
            
            voidCallAjaxGetByUrlArrayInput('@strTemp',arrayStrInput);

        });

    </script>

}

@if (strType == "html")
{
    string strGhiChu = Model[2];
    string strNameChart = Model[3];

    @*@await Html.PartialAsync(DNQT.ToolCommon.QTConstants.PartialView._HeaderGroupBox.PATH
        , new string[] {"" })*@

    <div id="@idDivChartAndNote" class="collapse">

        @*<div class="d-flex justify-content-center">
            <h6 class="text-center">@Html.Raw(strNameChart)</h6>
            </div>*@
            
        @if (strGhiChu!="")
        {
        <div class="mt-3 d-flex justify-content-start px-2">
            <pre class="my-auto" style="white-space: pre-wrap;">@strGhiChu</pre>
        </div>
        }

        <div class="d-flex justify-content-center flex-wrap" id="@idDivNoteColor">
            @*<span style="
                font-size: 12px;
                font-family: Arial, Helvetica, sans-serif;
                ">
                <span class="mx-2" style="
                background-color: #0074D9;
                color: rgba(0, 0, 0, 0);
                font-size: 9px;
                ">1234567.</span>
                <span style="
                color: dimgray;
                ">Tên ghi chú</span>
                </span>*@
        </div>

        <div class="card-body p-0" style="
    margin-left: -5px;
    margin-right: -5px;
">
            <div class="d-flex justify-content-center" style="max-height: 400px;">
                <canvas id="@idCanvasChartLine"></canvas>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center">
        <h6 class="text-center">@Html.Raw(strNameChart)</h6>
    </div>
    


    <div class="card my-3 mx-1 position-relative" id="@idDivThaoTac" style="max-width: 450px;">
        @await Html.PartialAsync(DNQT.ToolCommon.QTConstants.PartialView._HeaderGroupBox.PATH
    , new string[] {"Mốc thời gian cụ thể" })

        <div class="card-body mt-3 py-1 container">

            @await Html.PartialAsync(DNQT.ToolCommon.QTConstants.PartialView._DateRangePicker.PATH
        , new string[] {"html",strKeyAndFunction })

        </div>

        <div class="my-2 d-flex justify-content-center px-2">
            <a href="#" class="link-info" id="@idAShow">Hiển thị</a>
        </div>

    </div>

}
